<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html

    # Configuração para API Gateway (padrão)
    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    # Configuração para serviços SOA
    <Directory /var/www/html/services>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    # Configuração para arquivos estáticos (public/)
    <Directory /var/www/html/public>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
        # Permitir acesso direto aos arquivos CSS, JS, imagens, etc.
        <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
            Require all granted
        </FilesMatch>
    </Directory>

    # Alias para acessar /public/ diretamente
    Alias /public /var/www/html/public

    # Rewrite rules para roteamento SOA
    RewriteEngine On
    
    # Não reescrever arquivos estáticos (CSS, JS, imagens, etc.)
    RewriteCond %{REQUEST_URI} \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ [NC]
    RewriteRule ^(.*)$ - [L]
    
    # Não reescrever se o arquivo ou diretório existir
    RewriteCond %{REQUEST_FILENAME} -f [OR]
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^(.*)$ - [L]
    
    # Se for um serviço específico, redirecionar para o serviço
    RewriteCond %{ENV:SERVICE_NAME} !^$
    RewriteRule ^(.*)$ /services/%{ENV:SERVICE_NAME}/index.php [QSA,L]
    
    # Caso contrário, usar API Gateway
    RewriteRule ^(.*)$ /services/api-gateway.php [QSA,L]

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
